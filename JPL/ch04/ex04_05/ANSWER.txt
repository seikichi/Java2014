- (a): 具象クラスで表現すべき。
  - N分木のノードをわざわざ継承して複数の実装を定義する必要があるとは考えにくいから

- (b): 抽象クラスで表現すべき。
  - 深さ優先や幅優先などに応じて `TreeWalker` の実装が複数存在すると考えるのが自然だと思ったから
  - 多重継承をする必要が無いと考えたから
  - 深さ優先と幅優先で共通の処理があるはずであり (探索中に各ノードに対して行う処理など)、抽象クラスにして部分的な処理を持たせた方が綺麗にまとまると考えたから

- (c): インタフェースで表現すべき
  - 多重継承が必要なケースが出てくると考えられる
  - 型名が `able` で終わっているため、慣習的にインタフェースにすべき

- (d): 抽象クラスで表現すべき。
  - グラフィックデスクトップから実行できるプログラムは様々な実装が存在するため、具象クラスにするより抽象クラスかインタフェースにする方が自然と考えられる
  - 「グラフィックデスクトップ」で実行するプログラムを複数作成する際に、共通する実装が出てくると考えられる。インタフェースにするより抽象クラスにした方が綺麗にまとまると考えたので抽象クラスを選んんだ。
